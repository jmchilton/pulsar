[tox]
envlist = py27-lint, py27-lint-readme, lint-docs, py34-lint, py26, py27, py34

[testenv]
commands = {envpython} setup.py nosetests []
deps =
    -rdev-requirements.txt
    drmaa

# [testenv:py34]
#commands = {envpython} setup.py nosetests {env:NOSETEST_ARGS:--test galaxy,pulsar,test/action_mapper_test.py,test/amqp_test.py,test/authorization_test.py,test/cache_test.py,test/client_manager_test.py,test/client_staging_test.py,test/client_test.py,test/client_transport_test.py,test/job_directory_test.py,test/main_util_test.py,test/manager_drmaa_test.py,test/manager_factory_test.py,test/manager_queued_test.py,test/manager_test.py,test/test_objectstore.py,test/path_mapper_test.py,test/persistence_test.py,test/pulsar_objectstore_test.py,test/retry_action_test.py,test/routes_test.py,test/scripts_config_test.py,test/test_tool_deps.py,test/toolbox_test.py,test/transfer_action_test.py,test/validator_test.py,test/wsgi_app_test.py}
#deps =
#    -rdev-requirements.txt
#    drmaa

[testenv:py27-lint]
commands = flake8 pulsar test
skip_install = True
deps = flake8

[testenv:py34-lint]
commands = flake8 pulsar test
skip_install = True
deps = flake8

[testenv:py27-lint-readme]
commands = make lint-readme
skip_install = True
whitelist_externals = make
deps =
    readme

[testenv:lint-docs]
commands = make lint-docs
skip_install = True
whitelist_externals = make
deps =
    -rrequirements.txt
    sphinx==1.2

